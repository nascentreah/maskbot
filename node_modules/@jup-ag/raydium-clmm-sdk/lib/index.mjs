var le=Object.defineProperty,ce=Object.defineProperties;var de=Object.getOwnPropertyDescriptors;var H=Object.getOwnPropertySymbols;var pe=Object.prototype.hasOwnProperty,fe=Object.prototype.propertyIsEnumerable;var W=(p,e,t)=>e in p?le(p,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):p[e]=t,j=(p,e)=>{for(var t in e||(e={}))pe.call(e,t)&&W(p,t,e[t]);if(H)for(var t of H(e))fe.call(e,t)&&W(p,t,e[t]);return p},J=(p,e)=>ce(p,de(e));import oe from"bn.js";import D from"decimal.js";import{PublicKey as ye}from"@solana/web3.js";import I from"bn.js";var w=new I(0),M=new I(1),N=new I(-1),C=new I(1).shln(64),_=new I(1).shln(128),z=C.sub(M),F=64,$=_.subn(1),h=-307200,O=-h,B=new I("3939943522091"),v=new I("86367321006760116002434269"),ee=-307200,te=306600,ne=14,ie="59543866431248",ae="184467440737095516",re="15793534762490258745",q=new I(10).pow(new I(6));var Ie=new ye("TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA");import m from"bn.js";import E from"decimal.js";import{PublicKey as ge}from"@solana/web3.js";function ke(p){let e=new ArrayBuffer(4);return new DataView(e).setInt32(0,p,!1),new Uint8Array(e)}var Se=Buffer.from("tick_array","utf8");function we(p,e){let[t,n]=ge.findProgramAddressSync(p,e);return{publicKey:t,nonce:n}}function P(p,e,t){let{publicKey:n,nonce:a}=we([Se,e.toBuffer(),ke(t)],p);return{publicKey:n,nonce:a}}import se from"bn.js";var x=60,be=1024,g=class{static getTickArrayStartIndexByTick(e,t){let n=e/(x*t);return e<0&&e%(x*t)!=0?n=Math.ceil(n)-1:n=Math.floor(n),n*(t*x)}static getTickArrayOffsetInBitmapByTick(e,t){let n=t*x,a=Math.floor(e/n)+512;return Math.abs(a)}static checkTickArrayIsInitialized(e,t,n){let a=n*x,r=Math.floor(t/a)+512,i=Math.abs(r);return{isInitialized:e.testn(i),startIndex:(i-512)*a}}static getNextTickArrayStartIndex(e,t,n){return n?e-t*x:e+t*x}static mergeTickArrayBitmap(e){return e[0].add(e[1].shln(64)).add(e[2].shln(128)).add(e[3].shln(192)).add(e[4].shln(256)).add(e[5].shln(320)).add(e[6].shln(384)).add(e[7].shln(448)).add(e[8].shln(512)).add(e[9].shln(576)).add(e[10].shln(640)).add(e[11].shln(704)).add(e[12].shln(768)).add(e[13].shln(832)).add(e[14].shln(896)).add(e[15].shln(960))}static getInitializedTickArrayInRange(e,t,n,a){if(n%(t*x)!=0)throw new Error("Invild tickArrayStartIndex");let r=Math.floor(n/(t*x))+512;return[...g.searchLowBitFromStart(e,r-1,0,a,t),...g.searchHightBitFromStart(e,r,be,a,t)]}static searchLowBitFromStart(e,t,n,a,r){let i=0,s=[];for(let u=t;u>=n;u--){if(e.shrn(u).and(new se(1)).eqn(1)){let l=(u-512)*(r*x);s.push(l),i++}if(i>=a)break}return s}static searchHightBitFromStart(e,t,n,a,r){let i=0,s=[];for(let u=t;u<n;u++){if(e.shrn(u).and(new se(1)).eqn(1)){let l=(u-512)*(r*x);s.push(l),i++}if(i>=a)break}return s}};var ue=15,L=class{static nextInitializedTick(e,t,n,a,r,i){let{initializedTick:s,tickArrayAddress:u,tickArrayStartTickIndex:l}=this.nextInitializedTickInOneArray(e,t,n,a,r,i);for(;s==null||s.liquidityGross.lten(0);){if(l=g.getNextTickArrayStartIndex(l,r,i),l<ee||l>te)throw new Error("No enough initialized tickArray");let f=n[l];if(f===void 0)continue;let{nextTick:b,tickArrayAddress:c,tickArrayStartTickIndex:T}=this.firstInitializedTickInOneArray(e,t,f,i);[s,u,l]=[b,c,T]}if(s==null)throw new Error("No invaild tickArray cache");return{nextTick:s,tickArrayAddress:u,tickArrayStartTickIndex:l}}static firstInitializedTickInOneArray(e,t,n,a){let r;if(a){let s=x-1;for(;s>=0;){let u=n.ticks[s];if(u.liquidityGross.gtn(0)){r=u;break}s=s-1}}else{let s=0;for(;s<x;){let u=n.ticks[s];if(u.liquidityGross.gtn(0)){r=u;break}s=s+1}}let{publicKey:i}=P(e,t,n.startTickIndex);return{nextTick:r,tickArrayAddress:i,tickArrayStartTickIndex:n.startTickIndex}}static nextInitializedTickInOneArray(e,t,n,a,r,i){let s=g.getTickArrayStartIndexByTick(a,r),u=Math.floor((a-s)/r),l=n[s];if(l==null)return{initializedTick:void 0,tickArrayAddress:void 0,tickArrayStartTickIndex:s};let f;if(i)for((a-s)%r==0&&(u=u-1);u>=0;){let c=l.ticks[u];if(c.liquidityGross.gtn(0)){f=c;break}u=u-1}else for(u=u+1;u<x;){let c=l.ticks[u];if(c.liquidityGross.gtn(0)){f=c;break}u=u+1}let{publicKey:b}=P(e,t,s);return{initializedTick:f,tickArrayAddress:b,tickArrayStartTickIndex:l.startTickIndex}}};var S=class{static mulDivRoundingUp(e,t,n){let a=e.mul(t),r=a.div(n);return a.mod(n).eq(w)||(r=r.add(M)),r}static mulDivFloor(e,t,n){if(n.eq(w))throw new Error("division by 0");return e.mul(t).div(n)}static mulDivCeil(e,t,n){if(n.eq(w))throw new Error("division by 0");return e.mul(t).add(n.sub(M)).div(n)}static x64ToDecimal(e,t){return new E(e.toString()).div(E.pow(2,64)).toDecimalPlaces(t)}static decimalToX64(e){return new m(e.mul(E.pow(2,64)).floor().toFixed())}static wrappingSubU128(e,t){return e.add(_).sub(t).mod(_)}};function k(p,e){return Q(p.mul(e),64,256)}function xe(p,e,t){let n=p.toTwos(t).shln(e);return n.imaskn(t+1),n.fromTwos(t)}function Q(p,e,t){let n=p.toTwos(t).shrn(e);return n.imaskn(t-e+1),n.fromTwos(t-e)}var A=class{static sqrtPriceX64ToPrice(e,t,n){return S.x64ToDecimal(e).pow(2).mul(E.pow(10,t-n))}static priceToSqrtPriceX64(e,t,n){return S.decimalToX64(e.mul(E.pow(10,n-t)).sqrt())}static getNextSqrtPriceX64FromInput(e,t,n,a){if(!e.gt(w))throw new Error("sqrtPriceX64 must greater than 0");if(!t.gt(w))throw new Error("liquidity must greater than 0");return a?this.getNextSqrtPriceFromTokenAmountARoundingUp(e,t,n,!0):this.getNextSqrtPriceFromTokenAmountBRoundingDown(e,t,n,!0)}static getNextSqrtPriceX64FromOutput(e,t,n,a){if(!e.gt(w))throw new Error("sqrtPriceX64 must greater than 0");if(!t.gt(w))throw new Error("liquidity must greater than 0");return a?this.getNextSqrtPriceFromTokenAmountBRoundingDown(e,t,n,!1):this.getNextSqrtPriceFromTokenAmountARoundingUp(e,t,n,!1)}static getNextSqrtPriceFromTokenAmountARoundingUp(e,t,n,a){if(n.eq(w))return e;let r=t.shln(F);if(a){let i=r,s=r.add(n.mul(e));return s.gte(i)?S.mulDivCeil(i,e,s):S.mulDivRoundingUp(i,M,i.div(e).add(n))}else{let i=n.mul(e);if(!r.gt(i))throw new Error("getNextSqrtPriceFromTokenAmountARoundingUp,liquidityLeftShift must gt amountMulSqrtPrice");let s=r.sub(i);return S.mulDivCeil(r,e,s)}}static getNextSqrtPriceFromTokenAmountBRoundingDown(e,t,n,a){let r=n.shln(F);if(a)return e.add(r.div(t));{let i=S.mulDivRoundingUp(r,M,t);if(!e.gt(i))throw new Error("getNextSqrtPriceFromTokenAmountBRoundingDown sqrtPriceX64 must gt amountDivLiquidity");return e.sub(i)}}static getSqrtPriceX64FromTick(e){if(!Number.isInteger(e))throw new Error("tick must be integer");if(e<h||e>O)throw new Error("tick must be in MIN_TICK and MAX_TICK");let t=e<0?e*-1:e,n=(t&1)!=0?new m("18445821805675395072"):new m("18446744073709551616");return(t&2)!=0&&(n=k(n,new m("18444899583751176192"))),(t&4)!=0&&(n=k(n,new m("18443055278223355904"))),(t&8)!=0&&(n=k(n,new m("18439367220385607680"))),(t&16)!=0&&(n=k(n,new m("18431993317065453568"))),(t&32)!=0&&(n=k(n,new m("18417254355718170624"))),(t&64)!=0&&(n=k(n,new m("18387811781193609216"))),(t&128)!=0&&(n=k(n,new m("18329067761203558400"))),(t&256)!=0&&(n=k(n,new m("18212142134806163456"))),(t&512)!=0&&(n=k(n,new m("17980523815641700352"))),(t&1024)!=0&&(n=k(n,new m("17526086738831433728"))),(t&2048)!=0&&(n=k(n,new m("16651378430235570176"))),(t&4096)!=0&&(n=k(n,new m("15030750278694412288"))),(t&8192)!=0&&(n=k(n,new m("12247334978884435968"))),(t&16384)!=0&&(n=k(n,new m("8131365268886854656"))),(t&32768)!=0&&(n=k(n,new m("3584323654725218816"))),(t&65536)!=0&&(n=k(n,new m("696457651848324352"))),(t&131072)!=0&&(n=k(n,new m("26294789957507116"))),(t&262144)!=0&&(n=k(n,new m("37481735321082"))),e>0&&(n=$.div(n)),n}static getTickFromPrice(e,t,n){return A.getTickFromSqrtPriceX64(A.priceToSqrtPriceX64(e,t,n))}static getTickFromSqrtPriceX64(e){if(e.gt(v)||e.lt(B))throw new Error("Provided sqrtPrice is not within the supported sqrtPrice range.");let t=e.bitLength()-1,n=new m(t-64),a=xe(n,32,128),r=new m("8000000000000000","hex"),i=0,s=new m(0),u=t>=64?e.shrn(t-63):e.shln(63-t);for(;r.gt(new m(0))&&i<ne;){u=u.mul(u);let o=u.shrn(127);u=u.shrn(63+o.toNumber()),s=s.add(r.mul(o)),r=r.shrn(1),i+=1}let l=s.shrn(32),b=a.add(l).mul(new m(ie)),c=Q(b.sub(new m(ae)),64,128).toNumber(),T=Q(b.add(new m(re)),64,128).toNumber();return c==T?c:A.getSqrtPriceX64FromTick(T).lte(e)?T:c}};var y=class{static addDelta(e,t){return e.add(t)}static getTokenAmountAFromLiquidity(e,t,n,a){if(e.gt(t)&&([e,t]=[t,e]),!e.gt(w))throw new Error("sqrtPriceX64A must greater than 0");let r=n.ushln(F),i=t.sub(e);return a?S.mulDivRoundingUp(S.mulDivCeil(r,i,t),M,e):S.mulDivFloor(r,i,t).div(e)}static getTokenAmountBFromLiquidity(e,t,n,a){if(e.gt(t)&&([e,t]=[t,e]),!e.gt(w))throw new Error("sqrtPriceX64A must greater than 0");return a?S.mulDivCeil(n,t.sub(e),C):S.mulDivFloor(n,t.sub(e),C)}static getLiquidityFromTokenAmountA(e,t,n,a){e.gt(t)&&([e,t]=[t,e]);let r=n.mul(e).mul(t),i=t.sub(e),s=r.div(i);return a?S.mulDivRoundingUp(s,M,z):s.shrn(F)}static getLiquidityFromTokenAmountB(e,t,n){return e.gt(t)&&([e,t]=[t,e]),S.mulDivFloor(n,z,t.sub(e))}static getLiquidityFromTokenAmounts(e,t,n,a,r){if(t.gt(n)&&([t,n]=[n,t]),e.lte(t))return y.getLiquidityFromTokenAmountA(t,n,a,!1);if(e.lt(n)){let i=y.getLiquidityFromTokenAmountA(e,n,a,!1),s=y.getLiquidityFromTokenAmountB(t,e,r);return i.lt(s)?i:s}else return y.getLiquidityFromTokenAmountB(t,n,r)}static getAmountsFromLiquidity(e,t,n,a,r){if(t.gt(n)&&([t,n]=[n,t]),e.lte(t))return{amountA:y.getTokenAmountAFromLiquidity(t,n,a,r),amountB:new m(0)};if(e.lt(n)){let i=y.getTokenAmountAFromLiquidity(e,n,a,r),s=y.getTokenAmountBFromLiquidity(t,e,a,r);return{amountA:i,amountB:s}}else return{amountA:new m(0),amountB:y.getTokenAmountBFromLiquidity(t,n,a,r)}}static getAmountsFromLiquidityWithSlippage(e,t,n,a,r,i,s){let{amountA:u,amountB:l}=y.getAmountsFromLiquidity(e,t,n,a,i),f=r?1+s:1-s,b=u.muln(f),c=l.muln(f);return{amountSlippageA:b,amountSlippageB:c}}},R=class{static swapCompute(e,t,n,a,r,i,s,u,l,f,b,c){if(f.eq(w))throw new Error("amountSpecified must not be 0");if(c||(c=a?B.add(M):v.sub(M)),a){if(c.lt(B))throw new Error("sqrtPriceX64 must greater than MIN_SQRT_PRICE_X64");if(c.gte(l))throw new Error("sqrtPriceX64 must smaller than current")}else{if(c.gt(v))throw new Error("sqrtPriceX64 must smaller than MAX_SQRT_PRICE_X64");if(c.lte(l))throw new Error("sqrtPriceX64 must greater than current")}let T=f.gt(w),o={amountSpecifiedRemaining:f,amountCalculated:w,sqrtPriceX64:l,tick:s,accounts:[],liquidity:i,feeAmount:new m(0)},K=0;for(;!o.amountSpecifiedRemaining.eq(w)&&o.sqrtPriceX64!=c&&o.tick<O&&o.tick>h;){if(K>10)throw Error("liquidity limit");let d={};d.sqrtPriceStartX64=o.sqrtPriceX64;let{nextTick:G,tickArrayAddress:Y,tickArrayStartTickIndex:Z}=L.nextInitializedTick(e,t,n,o.tick,u,a);d.tickNext=G.tick,d.initialized=G.liquidityGross.gtn(0),b!==Z&&Y&&(o.accounts.push(Y),b=Z),d.tickNext<h?d.tickNext=h:d.tickNext>O&&(d.tickNext=O),d.sqrtPriceNextX64=A.getSqrtPriceX64FromTick(d.tickNext);let U;if(a&&d.sqrtPriceNextX64.lt(c)||!a&&d.sqrtPriceNextX64.gt(c)?U=c:U=d.sqrtPriceNextX64,[o.sqrtPriceX64,d.amountIn,d.amountOut,d.feeAmount]=R.swapStepCompute(o.sqrtPriceX64,U,o.liquidity,o.amountSpecifiedRemaining,r),o.feeAmount=o.feeAmount.add(d.feeAmount),T?(o.amountSpecifiedRemaining=o.amountSpecifiedRemaining.sub(d.amountIn.add(d.feeAmount)),o.amountCalculated=o.amountCalculated.sub(d.amountOut)):(o.amountSpecifiedRemaining=o.amountSpecifiedRemaining.add(d.amountOut),o.amountCalculated=o.amountCalculated.add(d.amountIn.add(d.feeAmount))),o.sqrtPriceX64.eq(d.sqrtPriceNextX64)){if(d.initialized){let X=G.liquidityNet;a&&(X=X.mul(N)),o.liquidity=y.addDelta(o.liquidity,X)}o.tick=a?d.tickNext-1:d.tickNext}else o.sqrtPriceX64!=d.sqrtPriceStartX64&&(o.tick=A.getTickFromSqrtPriceX64(o.sqrtPriceX64));++K}return{amountCalculated:o.amountCalculated,feeAmount:o.feeAmount,sqrtPriceX64:o.sqrtPriceX64,liquidity:o.liquidity,tickCurrent:o.tick,accounts:o.accounts}}static swapStepCompute(e,t,n,a,r){let i={sqrtPriceX64Next:new m(0),amountIn:new m(0),amountOut:new m(0),feeAmount:new m(0)},s=e.gte(t),u=a.gte(w);if(u){let f=S.mulDivFloor(a,q.sub(new m(r.toString())),q);i.amountIn=s?y.getTokenAmountAFromLiquidity(t,e,n,!0):y.getTokenAmountBFromLiquidity(e,t,n,!0),f.gte(i.amountIn)?i.sqrtPriceX64Next=t:i.sqrtPriceX64Next=A.getNextSqrtPriceX64FromInput(e,n,f,s)}else i.amountOut=s?y.getTokenAmountBFromLiquidity(t,e,n,!1):y.getTokenAmountAFromLiquidity(e,t,n,!1),a.mul(N).gte(i.amountOut)?i.sqrtPriceX64Next=t:i.sqrtPriceX64Next=A.getNextSqrtPriceX64FromOutput(e,n,a.mul(N),s);let l=t.eq(i.sqrtPriceX64Next);return s?(l&&u||(i.amountIn=y.getTokenAmountAFromLiquidity(i.sqrtPriceX64Next,e,n,!0)),l&&!u||(i.amountOut=y.getTokenAmountBFromLiquidity(i.sqrtPriceX64Next,e,n,!1))):(i.amountIn=l&&u?i.amountIn:y.getTokenAmountBFromLiquidity(e,i.sqrtPriceX64Next,n,!0),i.amountOut=l&&!u?i.amountOut:y.getTokenAmountAFromLiquidity(e,i.sqrtPriceX64Next,n,!1)),!u&&i.amountOut.gt(a.mul(N))&&(i.amountOut=a.mul(N)),u&&!i.sqrtPriceX64Next.eq(t)?i.feeAmount=a.sub(i.amountIn):i.feeAmount=S.mulDivCeil(i.amountIn,new m(r),q.sub(new m(r))),[i.sqrtPriceX64Next,i.amountIn,i.amountOut,i.feeAmount]}};var V=class{static getOutputAmountAndRemainAccounts(e,t,n,a,r){let i=n.equals(e.mintA.mint),s=[],{isExist:u,startIndex:l,nextAccountMeta:f}=this.getFirstInitializedTickArray(e,i);if(!u||l===void 0||!f)throw new Error("Invalid tick array");s.push(f);let{amountCalculated:b,accounts:c,sqrtPriceX64:T,feeAmount:o}=R.swapCompute(e.programId,e.id,t,i,e.ammConfig.tradeFeeRate,e.liquidity,e.tickCurrent,e.tickSpacing,e.sqrtPriceX64,a,l,r);return s.push(...c),{expectedAmountOut:b.mul(N),remainingAccounts:s,executionPrice:T,feeAmount:o}}static getFirstInitializedTickArray(e,t){let n=g.mergeTickArrayBitmap(e.tickArrayBitmap),{isInitialized:a,startIndex:r}=g.checkTickArrayIsInitialized(n,e.tickCurrent,e.tickSpacing);if(a){let{publicKey:u}=P(e.programId,e.id,r);return{isExist:!0,startIndex:r,nextAccountMeta:u}}let{isExist:i,nextStartIndex:s}=this.nextInitializedTickArrayStartIndex(e,t);if(i){let{publicKey:u}=P(e.programId,e.id,s);return{isExist:!0,startIndex:s,nextAccountMeta:u}}return{isExist:!1,nextAccountMeta:void 0,startIndex:void 0}}static nextInitializedTickArrayStartIndex(e,t){let n=g.mergeTickArrayBitmap(e.tickArrayBitmap),a=g.getTickArrayOffsetInBitmapByTick(e.tickCurrent,e.tickSpacing),r=t?g.searchLowBitFromStart(n,a-1,0,1,e.tickSpacing):g.searchHightBitFromStart(n,a,1024,1,e.tickSpacing);return r.length>0?{isExist:!0,nextStartIndex:r[0]}:{isExist:!1,nextStartIndex:0}}};var me=class{static computeAmountOut({poolInfo:e,tickArrayCache:t,baseMint:n,amountIn:a,slippage:r,priceLimit:i=new D(0)}){let s;i.equals(new D(0))?s=n.equals(e.mintA.mint)?B.add(M):v.sub(M):s=A.priceToSqrtPriceX64(i,e.mintA.decimals,e.mintB.decimals);let{expectedAmountOut:u,remainingAccounts:l,executionPrice:f,feeAmount:b}=V.getOutputAmountAndRemainAccounts(e,t,n,a,s),c=A.sqrtPriceX64ToPrice(f,e.mintA.decimals,e.mintB.decimals),T=n.equals(e.mintA.mint)?c:new D(1).div(c),o=u.mul(new oe(Math.floor((1-r)*1e10))).div(new oe(1e10)),K=e.mintA.mint.equals(n)?e.currentPrice:new D(1).div(e.currentPrice),d=Math.abs(parseFloat(T.toFixed())-parseFloat(K.toFixed()))/parseFloat(K.toFixed());return{amountOut:u,minAmountOut:o,currentPrice:e.currentPrice,executionPrice:T,priceImpact:d,fee:b,remainingAccounts:l}}static getTickArrayPks(e,t,n){let a=g.mergeTickArrayBitmap(t.tickArrayBitmap),r=g.getTickArrayStartIndexByTick(t.tickCurrent,t.tickSpacing),i=[],s=g.getInitializedTickArrayInRange(a,t.tickSpacing,r,Math.floor(ue/2));for(let u of s){let{publicKey:l}=P(n,e,u);i.push(l)}return i}static formatPoolInfo({address:e,poolState:t,ammConfig:n,programId:a}){return{id:e,mintA:{mint:t.tokenMint0,vault:t.tokenVault0,decimals:t.mintDecimals0},mintB:{mint:t.tokenMint1,vault:t.tokenVault1,decimals:t.mintDecimals1},observationId:t.observationKey,ammConfig:J(j({},n),{id:t.ammConfig}),programId:a,tickSpacing:t.tickSpacing,liquidity:t.liquidity,sqrtPriceX64:t.sqrtPriceX64,currentPrice:A.sqrtPriceX64ToPrice(t.sqrtPriceX64,t.mintDecimals0,t.mintDecimals1),tickCurrent:t.tickCurrent,observationIndex:t.observationIndex,observationUpdateDuration:t.observationUpdateDuration,tickArrayBitmap:t.tickArrayBitmap}}};var rt={version:"0.1.0",name:"amm_v3",instructions:[{name:"createAmmConfig",accounts:[{name:"owner",isMut:!0,isSigner:!0},{name:"ammConfig",isMut:!0,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[{name:"index",type:"u16"},{name:"tickSpacing",type:"u16"},{name:"tradeFeeRate",type:"u32"},{name:"protocolFeeRate",type:"u32"},{name:"fundFeeRate",type:"u32"}]},{name:"updateAmmConfig",accounts:[{name:"owner",isMut:!1,isSigner:!0},{name:"ammConfig",isMut:!0,isSigner:!1}],args:[{name:"param",type:"u8"},{name:"value",type:"u32"}]},{name:"createPool",accounts:[{name:"poolCreator",isMut:!0,isSigner:!0},{name:"ammConfig",isMut:!1,isSigner:!1},{name:"poolState",isMut:!0,isSigner:!1},{name:"tokenMint0",isMut:!1,isSigner:!1},{name:"tokenMint1",isMut:!1,isSigner:!1},{name:"tokenVault0",isMut:!0,isSigner:!1},{name:"tokenVault1",isMut:!0,isSigner:!1},{name:"observationState",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1}],args:[{name:"sqrtPriceX64",type:"u128"}]},{name:"resetSqrtPrice",accounts:[{name:"owner",isMut:!1,isSigner:!0},{name:"poolState",isMut:!0,isSigner:!1},{name:"tokenVault0",isMut:!0,isSigner:!1},{name:"tokenVault1",isMut:!0,isSigner:!1},{name:"observationState",isMut:!0,isSigner:!1},{name:"recipientTokenAccount0",isMut:!0,isSigner:!1},{name:"recipientTokenAccount1",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[{name:"sqrtPriceX64",type:"u128"}]},{name:"initializeReward",accounts:[{name:"rewardFunder",isMut:!0,isSigner:!0},{name:"funderTokenAccount",isMut:!0,isSigner:!1},{name:"ammConfig",isMut:!1,isSigner:!1},{name:"poolState",isMut:!0,isSigner:!1},{name:"rewardTokenMint",isMut:!1,isSigner:!1},{name:"rewardTokenVault",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1}],args:[{name:"param",type:{defined:"InitializeRewardParam"}}]},{name:"collectRemainingRewards",accounts:[{name:"rewardFunder",isMut:!0,isSigner:!0},{name:"funderTokenAccount",isMut:!0,isSigner:!1},{name:"poolState",isMut:!0,isSigner:!1},{name:"rewardTokenVault",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[{name:"rewardIndex",type:"u8"}]},{name:"updateRewardInfos",accounts:[{name:"poolState",isMut:!0,isSigner:!1}],args:[]},{name:"setRewardParams",accounts:[{name:"authority",isMut:!0,isSigner:!0},{name:"ammConfig",isMut:!0,isSigner:!1},{name:"poolState",isMut:!0,isSigner:!1}],args:[{name:"rewardIndex",type:"u8"},{name:"emissionsPerSecondX64",type:"u128"},{name:"openTime",type:"u64"},{name:"endTime",type:"u64"}]},{name:"collectProtocolFee",accounts:[{name:"owner",isMut:!1,isSigner:!0},{name:"poolState",isMut:!0,isSigner:!1},{name:"ammConfig",isMut:!1,isSigner:!1},{name:"tokenVault0",isMut:!0,isSigner:!1},{name:"tokenVault1",isMut:!0,isSigner:!1},{name:"recipientTokenAccount0",isMut:!0,isSigner:!1},{name:"recipientTokenAccount1",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[{name:"amount0Requested",type:"u64"},{name:"amount1Requested",type:"u64"}]},{name:"collectFundFee",accounts:[{name:"owner",isMut:!1,isSigner:!0},{name:"poolState",isMut:!0,isSigner:!1},{name:"ammConfig",isMut:!1,isSigner:!1},{name:"tokenVault0",isMut:!0,isSigner:!1},{name:"tokenVault1",isMut:!0,isSigner:!1},{name:"recipientTokenAccount0",isMut:!0,isSigner:!1},{name:"recipientTokenAccount1",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[{name:"amount0Requested",type:"u64"},{name:"amount1Requested",type:"u64"}]},{name:"openPosition",accounts:[{name:"payer",isMut:!0,isSigner:!0},{name:"positionNftOwner",isMut:!1,isSigner:!1},{name:"positionNftMint",isMut:!0,isSigner:!0},{name:"positionNftAccount",isMut:!0,isSigner:!1},{name:"metadataAccount",isMut:!0,isSigner:!1},{name:"poolState",isMut:!0,isSigner:!1},{name:"protocolPosition",isMut:!0,isSigner:!1},{name:"tickArrayLower",isMut:!0,isSigner:!1},{name:"tickArrayUpper",isMut:!0,isSigner:!1},{name:"personalPosition",isMut:!0,isSigner:!1},{name:"tokenAccount0",isMut:!0,isSigner:!1},{name:"tokenAccount1",isMut:!0,isSigner:!1},{name:"tokenVault0",isMut:!0,isSigner:!1},{name:"tokenVault1",isMut:!0,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"associatedTokenProgram",isMut:!1,isSigner:!1},{name:"metadataProgram",isMut:!1,isSigner:!1}],args:[{name:"tickLowerIndex",type:"i32"},{name:"tickUpperIndex",type:"i32"},{name:"tickArrayLowerStartIndex",type:"i32"},{name:"tickArrayUpperStartIndex",type:"i32"},{name:"liquidity",type:"u128"},{name:"amount0Max",type:"u64"},{name:"amount1Max",type:"u64"}]},{name:"closePosition",accounts:[{name:"nftOwner",isMut:!0,isSigner:!0},{name:"positionNftMint",isMut:!0,isSigner:!1},{name:"positionNftAccount",isMut:!0,isSigner:!1},{name:"personalPosition",isMut:!0,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[]},{name:"increaseLiquidity",accounts:[{name:"nftOwner",isMut:!1,isSigner:!0},{name:"nftAccount",isMut:!1,isSigner:!1},{name:"poolState",isMut:!0,isSigner:!1},{name:"protocolPosition",isMut:!0,isSigner:!1},{name:"personalPosition",isMut:!0,isSigner:!1},{name:"tickArrayLower",isMut:!0,isSigner:!1},{name:"tickArrayUpper",isMut:!0,isSigner:!1},{name:"tokenAccount0",isMut:!0,isSigner:!1},{name:"tokenAccount1",isMut:!0,isSigner:!1},{name:"tokenVault0",isMut:!0,isSigner:!1},{name:"tokenVault1",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[{name:"liquidity",type:"u128"},{name:"amount0Max",type:"u64"},{name:"amount1Max",type:"u64"}]},{name:"decreaseLiquidity",accounts:[{name:"nftOwner",isMut:!1,isSigner:!0},{name:"nftAccount",isMut:!1,isSigner:!1},{name:"personalPosition",isMut:!0,isSigner:!1},{name:"poolState",isMut:!0,isSigner:!1},{name:"protocolPosition",isMut:!0,isSigner:!1},{name:"tokenVault0",isMut:!0,isSigner:!1},{name:"tokenVault1",isMut:!0,isSigner:!1},{name:"tickArrayLower",isMut:!0,isSigner:!1},{name:"tickArrayUpper",isMut:!0,isSigner:!1},{name:"recipientTokenAccount0",isMut:!0,isSigner:!1},{name:"recipientTokenAccount1",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[{name:"liquidity",type:"u128"},{name:"amount0Min",type:"u64"},{name:"amount1Min",type:"u64"}]},{name:"swap",accounts:[{name:"payer",isMut:!1,isSigner:!0},{name:"ammConfig",isMut:!1,isSigner:!1},{name:"poolState",isMut:!0,isSigner:!1},{name:"inputTokenAccount",isMut:!0,isSigner:!1},{name:"outputTokenAccount",isMut:!0,isSigner:!1},{name:"inputVault",isMut:!0,isSigner:!1},{name:"outputVault",isMut:!0,isSigner:!1},{name:"observationState",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"tickArray",isMut:!0,isSigner:!1}],args:[{name:"amount",type:"u64"},{name:"otherAmountThreshold",type:"u64"},{name:"sqrtPriceLimitX64",type:"u128"},{name:"isBaseInput",type:"bool"}]},{name:"swapRouterBaseIn",accounts:[{name:"payer",isMut:!1,isSigner:!0},{name:"inputTokenAccount",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[{name:"amountIn",type:"u64"},{name:"amountOutMinimum",type:"u64"}]}],accounts:[{name:"ammConfig",type:{kind:"struct",fields:[{name:"bump",type:"u8"},{name:"index",type:"u16"},{name:"owner",type:"publicKey"},{name:"protocolFeeRate",type:"u32"},{name:"tradeFeeRate",type:"u32"},{name:"tickSpacing",type:"u16"},{name:"fundFeeRate",type:"u32"},{name:"paddingU32",type:"u32"},{name:"fundOwner",type:"publicKey"},{name:"padding",type:{array:["u64",3]}}]}},{name:"observationState",type:{kind:"struct",fields:[{name:"initialized",type:"bool"},{name:"poolId",type:"publicKey"},{name:"observations",type:{array:[{defined:"Observation"},1e3]}},{name:"padding",type:{array:["u128",5]}}]}},{name:"personalPositionState",type:{kind:"struct",fields:[{name:"bump",type:"u8"},{name:"nftMint",type:"publicKey"},{name:"poolId",type:"publicKey"},{name:"tickLowerIndex",type:"i32"},{name:"tickUpperIndex",type:"i32"},{name:"liquidity",type:"u128"},{name:"feeGrowthInside0LastX64",type:"u128"},{name:"feeGrowthInside1LastX64",type:"u128"},{name:"tokenFeesOwed0",type:"u64"},{name:"tokenFeesOwed1",type:"u64"},{name:"rewardInfos",type:{array:[{defined:"PositionRewardInfo"},3]}},{name:"padding",type:{array:["u64",8]}}]}},{name:"poolState",type:{kind:"struct",fields:[{name:"bump",type:"u8"},{name:"ammConfig",type:"publicKey"},{name:"owner",type:"publicKey"},{name:"tokenMint0",type:"publicKey"},{name:"tokenMint1",type:"publicKey"},{name:"tokenVault0",type:"publicKey"},{name:"tokenVault1",type:"publicKey"},{name:"observationKey",type:"publicKey"},{name:"mintDecimals0",type:"u8"},{name:"mintDecimals1",type:"u8"},{name:"tickSpacing",type:"u16"},{name:"liquidity",type:"u128"},{name:"sqrtPriceX64",type:"u128"},{name:"tickCurrent",type:"i32"},{name:"observationIndex",type:"u16"},{name:"observationUpdateDuration",type:"u16"},{name:"feeGrowthGlobal0X64",type:"u128"},{name:"feeGrowthGlobal1X64",type:"u128"},{name:"protocolFeesToken0",type:"u64"},{name:"protocolFeesToken1",type:"u64"},{name:"swapInAmountToken0",type:"u128"},{name:"swapOutAmountToken1",type:"u128"},{name:"swapInAmountToken1",type:"u128"},{name:"swapOutAmountToken0",type:"u128"},{name:"status",type:"u8"},{name:"padding",type:{array:["u8",7]}},{name:"rewardInfos",type:{array:[{defined:"RewardInfo"},3]}},{name:"tickArrayBitmap",type:{array:["u64",16]}},{name:"totalFeesToken0",type:"u64"},{name:"totalFeesClaimedToken0",type:"u64"},{name:"totalFeesToken1",type:"u64"},{name:"totalFeesClaimedToken1",type:"u64"},{name:"fundFeesToken0",type:"u64"},{name:"fundFeesToken1",type:"u64"},{name:"padding1",type:{array:["u64",26]}},{name:"padding2",type:{array:["u64",32]}}]}},{name:"protocolPositionState",type:{kind:"struct",fields:[{name:"bump",type:"u8"},{name:"poolId",type:"publicKey"},{name:"tickLowerIndex",type:"i32"},{name:"tickUpperIndex",type:"i32"},{name:"liquidity",type:"u128"},{name:"feeGrowthInside0LastX64",type:"u128"},{name:"feeGrowthInside1LastX64",type:"u128"},{name:"tokenFeesOwed0",type:"u64"},{name:"tokenFeesOwed1",type:"u64"},{name:"rewardGrowthInside",type:{array:["u128",3]}},{name:"padding",type:{array:["u64",8]}}]}},{name:"tickArrayState",type:{kind:"struct",fields:[{name:"poolId",type:"publicKey"},{name:"startTickIndex",type:"i32"},{name:"ticks",type:{array:[{defined:"TickState"},60]}},{name:"initializedTickCount",type:"u8"},{name:"padding",type:{array:["u8",115]}}]}}],types:[{name:"InitializeRewardParam",type:{kind:"struct",fields:[{name:"openTime",type:"u64"},{name:"endTime",type:"u64"},{name:"emissionsPerSecondX64",type:"u128"}]}},{name:"Observation",type:{kind:"struct",fields:[{name:"blockTimestamp",type:"u32"},{name:"sqrtPriceX64",type:"u128"},{name:"cumulativeTimePriceX64",type:"u128"},{name:"padding",type:"u128"}]}},{name:"PositionRewardInfo",type:{kind:"struct",fields:[{name:"growthInsideLastX64",type:"u128"},{name:"rewardAmountOwed",type:"u64"}]}},{name:"RewardInfo",type:{kind:"struct",fields:[{name:"rewardState",type:"u8"},{name:"openTime",type:"u64"},{name:"endTime",type:"u64"},{name:"lastUpdateTime",type:"u64"},{name:"emissionsPerSecondX64",type:"u128"},{name:"rewardTotalEmissioned",type:"u64"},{name:"rewardClaimed",type:"u64"},{name:"tokenMint",type:"publicKey"},{name:"tokenVault",type:"publicKey"},{name:"authority",type:"publicKey"},{name:"rewardGrowthGlobalX64",type:"u128"}]}},{name:"TickState",type:{kind:"struct",fields:[{name:"tick",type:"i32"},{name:"liquidityNet",type:"i128"},{name:"liquidityGross",type:"u128"},{name:"feeGrowthOutside0X64",type:"u128"},{name:"feeGrowthOutside1X64",type:"u128"},{name:"rewardGrowthsOutsideX64",type:{array:["u128",3]}},{name:"padding",type:{array:["u32",13]}}]}},{name:"PoolStatusBitIndex",type:{kind:"enum",variants:[{name:"OpenPositionOrIncreaseLiquidity"},{name:"DecreaseLiquidity"},{name:"CollectFee"},{name:"CollectReward"},{name:"Swap"}]}},{name:"PoolStatusBitFlag",type:{kind:"enum",variants:[{name:"Enable"},{name:"Disable"}]}},{name:"RewardState",type:{kind:"enum",variants:[{name:"Uninitialized"},{name:"Initialized"},{name:"Opening"},{name:"Ended"}]}}],events:[{name:"CreateConfigEvent",fields:[{name:"index",type:"u16",index:!1},{name:"owner",type:"publicKey",index:!0},{name:"protocolFeeRate",type:"u32",index:!1},{name:"tradeFeeRate",type:"u32",index:!1},{name:"tickSpacing",type:"u16",index:!1},{name:"fundFeeRate",type:"u32",index:!1},{name:"fundOwner",type:"publicKey",index:!1}]},{name:"UpdaterConfigEvent",fields:[{name:"owner",type:"publicKey",index:!1},{name:"protocolFeeRate",type:"u32",index:!1},{name:"tradeFeeRate",type:"u32",index:!1},{name:"fundFeeRate",type:"u32",index:!1},{name:"fundOwner",type:"publicKey",index:!1}]},{name:"CreatePersonalPositionEvent",fields:[{name:"poolState",type:"publicKey",index:!1},{name:"minter",type:"publicKey",index:!1},{name:"nftOwner",type:"publicKey",index:!1},{name:"tickLowerIndex",type:"i32",index:!1},{name:"tickUpperIndex",type:"i32",index:!1},{name:"liquidity",type:"u128",index:!1},{name:"depositAmount0",type:"u64",index:!1},{name:"depositAmount1",type:"u64",index:!1}]},{name:"IncreaseLiquidityEvent",fields:[{name:"positionNftMint",type:"publicKey",index:!1},{name:"liquidity",type:"u128",index:!1},{name:"amount0",type:"u64",index:!1},{name:"amount1",type:"u64",index:!1}]},{name:"DecreaseLiquidityEvent",fields:[{name:"positionNftMint",type:"publicKey",index:!1},{name:"liquidity",type:"u128",index:!1},{name:"decreaseAmount0",type:"u64",index:!1},{name:"decreaseAmount1",type:"u64",index:!1},{name:"feeAmount0",type:"u64",index:!1},{name:"feeAmount1",type:"u64",index:!1},{name:"rewardAmounts",type:{array:["u64",3]},index:!1}]},{name:"CollectPersonalFeeEvent",fields:[{name:"positionNftMint",type:"publicKey",index:!1},{name:"recipientTokenAccount0",type:"publicKey",index:!1},{name:"recipientTokenAccount1",type:"publicKey",index:!1},{name:"amount0",type:"u64",index:!1},{name:"amount1",type:"u64",index:!1}]},{name:"UpdateRewardInfosEvent",fields:[{name:"rewardGrowthGlobalX64",type:{array:["u128",3]},index:!1}]},{name:"PoolCreatedEvent",fields:[{name:"tokenMint0",type:"publicKey",index:!1},{name:"tokenMint1",type:"publicKey",index:!1},{name:"tickSpacing",type:"u16",index:!1},{name:"poolState",type:"publicKey",index:!1},{name:"sqrtPriceX64",type:"u128",index:!1},{name:"tick",type:"i32",index:!1},{name:"tokenVault0",type:"publicKey",index:!1},{name:"tokenVault1",type:"publicKey",index:!1}]},{name:"CollectProtocolFeeEvent",fields:[{name:"poolState",type:"publicKey",index:!1},{name:"recipientTokenAccount0",type:"publicKey",index:!1},{name:"recipientTokenAccount1",type:"publicKey",index:!1},{name:"amount0",type:"u64",index:!1},{name:"amount1",type:"u64",index:!1}]},{name:"SwapEvent",fields:[{name:"poolState",type:"publicKey",index:!1},{name:"sender",type:"publicKey",index:!1},{name:"tokenAccount0",type:"publicKey",index:!1},{name:"tokenAccount1",type:"publicKey",index:!1},{name:"amount0",type:"u64",index:!1},{name:"amount1",type:"u64",index:!1},{name:"zeroForOne",type:"bool",index:!1},{name:"sqrtPriceX64",type:"u128",index:!1},{name:"liquidity",type:"u128",index:!1},{name:"tick",type:"i32",index:!1}]}],errors:[{code:6e3,name:"LOK",msg:"LOK"},{code:6001,name:"NotApproved",msg:"Not approved"},{code:6002,name:"InvalidUpdateConfigFlag",msg:"invalid update amm config flag"},{code:6003,name:"AccountLack",msg:"Account lack"},{code:6004,name:"ClosePositionErr",msg:"Remove liquitity, collect fees owed and reward then you can close position account"},{code:6005,name:"ZeroMintAmount",msg:"Minting amount should be greater than 0"},{code:6006,name:"InvaildTickIndex",msg:"Tick index of lower must be smaller than upper"},{code:6007,name:"TickInvaildOrder",msg:"The lower tick must be below the upper tick"},{code:6008,name:"TickLowerOverflow",msg:"The tick must be greater, or equal to the minimum tick(-221818)"},{code:6009,name:"TickUpperOverflow",msg:"The tick must be lesser than, or equal to the maximum tick(221818)"},{code:6010,name:"TickAndSpacingNotMatch",msg:"tick % tick_spacing must be zero"},{code:6011,name:"InvalidTickArray",msg:"Invaild tick array account"},{code:6012,name:"SqrtPriceLimitOverflow",msg:"Square root price limit overflow"},{code:6013,name:"SqrtPriceX64",msg:"sqrt_price_x64 out of range"},{code:6014,name:"LiquiditySubValueErr",msg:"Liquidity sub delta L must be smaller than before"},{code:6015,name:"LiquidityAddValueErr",msg:"Liquidity add delta L must be greater, or equal to before"},{code:6016,name:"InvaildLiquidity",msg:"Invaild liquidity when update position"},{code:6017,name:"ForbidBothZeroForSupplyLiquidity",msg:"Both token amount must not be zero while supply liquidity"},{code:6018,name:"TransactionTooOld",msg:"Transaction too old"},{code:6019,name:"PriceSlippageCheck",msg:"Price slippage check"},{code:6020,name:"TooLittleOutputReceived",msg:"Too little output received"},{code:6021,name:"TooMuchInputPaid",msg:"Too much input paid"},{code:6022,name:"InvaildSwapAmountSpecified",msg:"Swap special amount can not be zero"},{code:6023,name:"InvalidInputPoolVault",msg:"Input pool vault is invalid"},{code:6024,name:"TooSmallInputOrOutputAmount",msg:"Swap input or output amount is too small"},{code:6025,name:"InvalidRewardIndex",msg:"Invalid reward index"},{code:6026,name:"FullRewardInfo",msg:"The init reward token reach to the max"},{code:6027,name:"RewardTokenAlreadyInUse",msg:"The init reward token already in use"},{code:6028,name:"ExceptPoolVaultMint",msg:"The reward tokens must contain one of pool vault mint except the last reward"},{code:6029,name:"InvalidRewardInitParam",msg:"Invalid reward init param"},{code:6030,name:"InvalidRewardDesiredAmount",msg:"Invalid collect reward desired amount"},{code:6031,name:"InvalidRewardInputAccountNumber",msg:"Invalid collect reward input account number"},{code:6032,name:"InvalidRewardPeriod",msg:"Invalid reward period"},{code:6033,name:"NotApproveUpdateRewardEmissiones",msg:"Modification of emissiones is allowed within 72 hours from the end of the previous cycle"},{code:6034,name:"UnInitializedRewardInfo",msg:"uninitialized reward info"}]};export{me as Amm,rt as IDL,be as TICK_ARRAY_BITMAP_SIZE,x as TICK_ARRAY_SIZE,g as TickUtils,P as getPdaTickArrayAddress};
